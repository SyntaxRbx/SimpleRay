"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[827],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},22175:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:3},i="Usage",l={unversionedId:"usage",id:"usage",title:"Usage",description:"Example",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/SimpleRay/docs/usage",draft:!1,editUrl:"https://github.com/SyntaxRbx/SimpleRay/edit/main/docs/usage.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/SimpleRay/docs/installation"}},c={},s=[{value:"Example",id:"example",level:2}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local SimpleRay = require(game.ReplicatedStorage.SimpleRay)\n\nlocal origin = Vector3.new(0, 0, 0)\nlocal direction = Vector.new(0, 1, 0)\nlocal maxRayInstances = 2\n\nlocal result = SimpleRay.new({\n    Origin = origin,\n    Direction = direction,\n    Params = {\n        IgnoreWater = true,\n        Blacklist = {\n            workspace.Part2\n        }\n    },\n    MaxParts = maxRayInstances,\n    IgnoreCollideOffParts = true,\n    IgnoreTransparency = NumberRange.new(0.1, 1),\n    CustomFilter = function(inst: Instance)\n        return inst.Name ~= "Debug"\n    end,\n    Visualize = true\n}):GetResult()\n\nprint(result)\n--[[\n    Example Output:\n    {\n        Distance = 50,\n        Position = Vector3.new(12, 0, 37),\n        Normal = Vector3.new(0, 1, 0),\n        Instances = {\n            {\n                ["Instance"] = workspace.Part,\n                ["Material"] = Enum.Material.Plastic,\n                ["Normal"] = Vector3.new(0, 0, 1),\n                ["Position"] = Vector3.new(-2, 5, -17)\n            },\n            {\n                Instance = workspace.Baseplate,\n                Material = Enum.Material.Plastic,\n                Normal = Vector3.new(0, 1, 0),\n                Position = Vector3.new(12, 0, 37)\n            }\n        }\n    }\n]]\n')))}u.isMDXComponent=!0}}]);